@mixin line-clamp($lines: 1) {
    @if $lines <=1 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @else {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }
}

@mixin mq($width, $type: max) {
    $breakpoints: ("phone" : 480px,
            "phone-2": 576px,
            "tablet": 768px,
            "tablet-2": 992px,
        );

    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);

        @if $type==max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

$maxWidth: 1920;
$maxWidthContainer: 1234;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 480px) / #{$maxWidthContainer - 480}));
        }
    }

    @else if $type==2 {
        #{$property}: $startSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 480px) / #{$maxWidth - 480}));
        }
    }

    @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 480px) / #{$maxWidth - 480}));
    }
}

@mixin blackout {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    background-color: $black;
    transition: opacity 0.3s;
}

@mixin background {
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
}

@mixin burger {
    $burgerWidth: 32px;
    $burgerHeight: 2px;
    $burgerLineHeight: 2px;
    $burgerColor: $white;

    .header__line {
        position: relative;
        width: 32px;
        height: $burgerLineHeight;
        background-color: currentColor;
        transition: transform 0.3s ease-in-out;
        width: $burgerWidth; 
        height: $burgerHeight; 
        position: relative;
        color: $burgerColor; 

        &::before,
        &::after {
            content: "";
            position: absolute;
            left: 0;
            width: 100%;
            height: $burgerLineHeight;
            background-color: currentColor;
            transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
        }

        &::before {
            top: -10px;
        }

        &::after {
            bottom: -10px;
        }

        &--active {
            background-color: transparent;
            transition: background-color 0.2s ease-in-out;

            &::before {
                transform: rotate(45deg);
                top: 50%;
                transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
                opacity: 1;
            }

            &::after {
                transform: rotate(-45deg);
                top: 50%;
                transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
                opacity: 1;
            }
        }
    }
}

@mixin link {
    position: relative;
    padding-top: 2px;
    transition: opacity 0.3s, box-shadow 0.3s;

    &::before {
        position: absolute;
        content: "";
        width: 0;
        height: 2px;
        background-color: $blue-400;
        bottom: 0;
        transition: width 0.4s;
    }

    &:focus {
        box-shadow: 0 0 0 2px $blue-400;
    }

    &:hover {
        &::before {
            width: 100%;
        }
    }

    &:active {
        opacity: 0.3;
    }
}

@mixin button-swiper {
    @include adaptiv-value("height", 80, 65, 0);
    @include adaptiv-value("width", 80, 65, 0);
    transition: box-shadow 0.3s, opacity 0.3s;
    transform: translateY(-20%);

    @include mq('tablet-2') {
        top: -35px;
        transform: translateY(-50%);
    }

    @include mq('phone-2') {
        display: none;
    }

    &:focus {
        box-shadow: 0 0 0 2px $blue-400;
    }

    &:hover {
        &::after {
            background-color: $dark-800;
            transform: rotate(180deg);
        }
    }

    &:active {
        opacity: 0.3;
    }

    &::after {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: $blue-400;
        transition: background-color 0.3s, transform 0.5s;
        content: "";
        mask-repeat: no-repeat;
        mask-position: center;
        mask-size: cover;
        mask-image: url('../img/icons/setting.svg');
    }

    &--prev {
        @include adaptiv-value("left", -110, 10, 0);

        @include mq('tablet-2') {
            right: 80px;
            left: unset;
        }

        &::before {
            background-image: url('../img/icons/arrow-left.svg');
        }
    }

    &--next {
        @include adaptiv-value("right", -110, 10, 0);
        left: unset;

        @include mq('tablet-2') {
            right: 0;
        }

        &::before {
            background-image: url('../img/icons/arrow-right.svg');
        }
    }

    &::before {
        position: absolute;
        top: 50%;
        left: 50%;
        z-index: 10;
        width: 32px;
        height: 32px;
        transform: translate(-50%, -50%);
        content: "";
        @include background;
    }

}

@mixin swiper-button-disabled {
    &::after {
        background-color: $gray-150;
    }

    &::before {
        filter: invert(57%) sepia(6%) saturate(301%) hue-rotate(163deg) brightness(95%) contrast(88%);
    }
}